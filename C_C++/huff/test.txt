

使用说明

1) 这些函数名的第一个字母或最后一个字母不是g就是p。带 g的是用于读文件的函数（g是get的第一个字母，以g作为读文件的标识，容易理解和记忆）， 带p的是用于写文件的函数（P是put的第一个字母，以P作为写文件的标识）。例如有两个 tell 函数，tellg用于所读文件，tellp用于所写文件。同样，seekg用于读文件，seekp用于写文件。以上函数见名知意，一看就明白，不必死记。

如果是既可读又可写的文件，则任意用seekg或seekp。

2) 函数参数中的“文件中的位置”和“位移量”已被指定为long型整数，以字节为单位。“参照位置”可以是下面三者之一：
ios::beg 文件开头(beg是begin的缩写)，这是默认值。
ios::cur 指针当前的位置(cur是current的缩写)。
ios::end 文件末尾。
它们是在ios类中定义的枚举常量。举例如下：
infile.seekg(100); //输入文件中的指针向前移到字节位置
infile.seekg(-50,ios::cur); //输入文件中的指针从当前位置后移字节
outfile.seekp(-75,ios::end); //输出文件中的指针从文件尾后移字节

随机访问二进制数据文件

一般情况下读写是顺序进行的,即逐个字节进行读写。但是对于二进制数据文件来说,可以利用上面的成员函数移动指针,随机地访问文件中任一位置上的数据,还可以修改文件中的内容。

[例13.16] 有个多个NodeInfo的数据,要求:

把它们存到磁盘文件中;
将磁盘文件中的第1,3个Node数据读入程序,并显示出来;
将第2个Node的数据修改后存回磁盘文件中的原有位置。
从磁盘文件读出修改后的个学生的数据并显示出来。

要实现以上要求,需要解决个问题：

由于同一磁盘文件在程序中需要频繁地进行读和写，因此可将文件的工作方式指定为可读可写文件
1〉ios::in|ios::out|ios::binary。
2〉正确计算好每次访问时指针的定位，即正确使用seekg或seekp函数。
3〉正确进行文件中数据的重写(更新)。